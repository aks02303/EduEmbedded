Hi, in this segment I'm going to introduce
the two tasks that named entity
recognition and the information
extraction, methods for getting simple.
Structured information out of text
documents. Let's start with information
extraction. The goal of information
extraction systems is to find and
understand limited relevant parts of a
text and normally we're going to run it in
the context where the system gathers
information across many pieces of text and
the goal of doing this information
gathering is to be able to produce some
sort of structured representation of the
relevant information. So you can think of
it as. Instances of a database relations
arose in the database table, or has a, or
has a knowledge base. And when we do
information extraction we can have one of
two goals. One goal is to directly help
people to organize information so there
useful to people. And the other
possibility is to put the information in
semantically precise form. So, commonly
computers for other downstream information
processing task won't be able to perform
them if the input is just natural language
text. But if we can import out various
kinds of relations such as a database
table. Then it's very easy to do
subsequent data mining and processing. So
the kind of information that IA systems
extract is clear actual information. You
know, kind of who did what to whom, when,
kind of information. So, let's take a look
at the example of that. So, here are a
couple of examples. One's gathering
earnings, profits, board members,
headquarters, any of this kind of factual
information about companies from company
reports. So the idea is that the system
can look through the text and then its
sees, okay, here's the name of the
company. And then it's talking about its
headquarters and it says that the
headquarters are located in, so that's
kind of an indicator of the headquarters
location, Melbourne, Australia. And what
we're going to get out of that then is
this relation which you can think of as an
[inaudible] database table. That's only
one example. There are lots of other
examples and another example is this one
that I showed here. There are lots of
cases in. Bio text mining. So learning
drug gene product interactions, learning
sub cellular locus, localizations. Lots of
relations of interest are by a scientist
and various ways have been worked on in
information extraction systems. In the
more consumer space information extraction
is now available. And I think popular in
various applications like either Apple or
Google mail or is used in web indexing. So
here's a little example, how from Apple
mail and so. Yeah, there's this date and
so I, Apple mail recognized that there was
a date there and put in that little arrow
box and when I hold that down it's then
offering to create a calendar event for
me. And so that's added a little help and
from that allowing me to do that kind of
task faster. This kind of information
extraction is often fairly simple and
seems to be mainly based on using the kind
of regular expressions that we saw
earlier, including name lists. Here's one
more example about how companies are
starting to surface information extraction
and search applications. So if I stick in
to Google the HP bulletin headquarters as
well as regular web search results those
actually giving me write here best guess
for headquarters is Melbourne, London. And
of course we can. Argue a little about,
about whether that's the perfect answer.
They're really kind of two separate
answers here. Php [inaudible] is actually
kind of a complex case because they have
this complicated jewel company structure
and there is a [inaudible] office and a
London office. So, we'll call that just
about correct. Okay, that was information
extraction. Let me now go on and look at a
particular sub task that's become very
important, named entity recognition. So
the idea of named entity recognition is
that we're going to in particular just
look for and classify names in a text. So
the first step is we find names. So, here,
we then found a name. And in the
particular of what that means is we're
finding the limits of the name. So this
one is these two tokens. This name is this
one token. And then, once we've done that,
we're going to classify the names. So
we're going to say, that this name here is
a person name. This here is the name of an
organization. This is the date. And then
we have a sequence of further person
names. >> Fine. This is one [inaudible] of
[inaudible] and goes across the line
break. >> So, to say a little bit more
precisely of what the task is, we have
this sort of phrase of. Named entity
recognition. And so a little bit of a
codeword these days that reflects the
history. The idea of it was that entities
were made to refer to discrete things in
the world. So I am an entity. Stanford
University is an entity. But something
like sand, or, air isn't an entity. That
there's not a specific delineated physical
thing. And then, the idea of named were,
that some. Entities have names, so I
Christopher Maning have a name, but you
know, the chair I'm sitting in as I record
this, it is also an entity it's a discreet
physical thing, but it doesn't actually
have a name attached to it, so, it's not a
named identity. That's the kind of
philosophical history, in practices the
wood is use in name identity recognition,
that's not quite what it means. Cuz,
effectively what we're doing is using
named entity recognition to mean easily
distinguishable names or other. Things in
texts that we can pick out. So, in
particular, 2010. So things like dates,
times, quantities are normally regarded as
named entities, although according to, you
know, the original starting point of the
name, something like a date or a chemical
or a protein isn't actually an entity at
all, but we always include those kinds of
things when we're building named entity
recognition systems. Okay, so what is the
use of name identity recognition systems?
Well name identities. If you identify them
in a text, there's something that can be
indexed or linked off. So as I note down
below, many, companies make use of various
techniques for taking entities on web
pages. And then they can provide links off
of those entities to biopages or topic
pages, or other things of that sort. So
there are a whole bunch of commercial
products that run as web services that
allow you to do that kind of thing. If, in
general, you want to be crawling the web,
and picking up sentiment, we discussed
earlier detecting. The sentiment as to
whether it's positive or negative. But you
will then also need to work out who the
sentiment is about. Or what the sentiment
is about. And so, at that point you need
to be picking up company or product names
in the text. And that's a task of name
entity recognition. But there are a lot of
other uses when name entity recognition is
a sub-component of a larger task. And so,
commonly when you're doing information
extraction a lot of what you're doing is
actually identifying named entities and
then working out the relationship between
them. So, we'll talk later. [inaudible]
about questioning answering. And in
question answering for various kinds of
questions often the answers are named
entities. When did something happen or who
did something. And so it helps a lot for
question answering if you have good named
entity extraction. Another example that we
also saw of how people use name
[inaudible] recognition that plays off
this having semantically interpreted
information, is to use it in, in various
kinds of things, like calendaring
applications. Where you're making use of
the semantic interpretation. Okay, I hope
that's enough to have given you guys a
good sense of these two tasks, name
density recognition of simply picking out
concrete names of objects, people,
organizations, etcetera, or quantities,
dates, times, and things like that. And
then the bigger task of information
extraction where the goal was to pick out
particular relations [inaudible] from a
database table from pieces of unstructured
natural language text.
